# Orb 'circleci/aws-ecr@4.0.1' resolved to 'circleci/aws-ecr@4.0.1'
version: 2
jobs:
  go-postgres:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/go_single_threaded_test
  geth-postgres:
    resource_class: xlarge
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
      environment:
        TYPEORM_NAME: ci
        TYPEORM_HOST: explorerdb
    - image: circleci/postgres:11
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
        POSTGRES_INITDB_ARGS: --lc-collate=C --lc-ctype=C
    - image: circleci/postgres:11
      name: explorerdb
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
        POSTGRES_INITDB_ARGS: --lc-collate=C --lc-ctype=C
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/ethereum_test
  rust:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/rust_test
  parity-postgres:
    resource_class: large
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
      environment:
        TYPEORM_NAME: ci
        TYPEORM_HOST: explorerdb
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: circleci_postgres
        POSTGRES_DB: circleci_test
    - image: circleci/postgres:11-alpine
      name: explorerdb
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
    - image: smartcontract/devnet:latest
    environment:
    - DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
    - ETH_WS_PORT: 8546
    - ETH_HTTP_PORT: 8545
    - MIN_OUTGOING_CONFIRMATIONS: 1
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/ethereum_test parity
  truffle:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.22
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: ./tools/ci/truffle_test
  build-explorer-image:
    machine: true
    steps:
    - checkout
    - run:
        name: Docker build
        command: cd explorer && docker build .
  explorer:
    working_directory: ~/chainlink/explorer
    docker:
    - image: circleci/node:10-browsers
      environment:
        TYPEORM_NAME: ci
    - image: circleci/postgres:11-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: explorer_test
    steps:
    - checkout:
        path: ~/chainlink
    - restore_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}-{{checksum "client/yarn.lock"
          }}
    - run:
        name: Install Server Packages
        command: yarn install
    - run:
        name: Install Client Packages
        command: cd client && yarn install
    - save_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}-{{checksum "client/yarn.lock"
          }}
        paths:
        - ~/.cache/yarn
        - /usr/local/share/.cache/yarn
    - run:
        name: Run Lint
        command: yarn lint
    - run:
        name: Run Server Tests
        command: yarn test-ci:silent
    - run:
        name: Run Client Tests
        command: cd client && yarn test-ci:silent
    - run:
        name: Run E2E Tests
        command: cd client && yarn build && cd .. && yarn test-ci:e2e:silent
  operator-ui:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
    - run:
        command: yarn install
    - save_cache:
        name: Save Yarn Package Cache
        key: v{{ checksum "cache.version" }}-yarn-vendor-{{ checksum "yarn.lock" }}
        paths:
        - /usr/local/share/.cache/yarn
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/operator_ui_test
  reportcoverage:
    docker:
    - image: smartcontract/builder:1.0.21
    steps:
    - checkout
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/report_coverage
  go-sqlite:
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/init_gcloud
    - run:
        command: ./tools/ci/go_test | tee /tmp/go_test.txt
    - store_artifacts:
        path: /tmp/go_test.txt
  go-sqlite-race:
    resource_class: large
    working_directory: /go/src/github.com/smartcontractkit/chainlink
    docker:
    - image: smartcontract/builder:1.0.21
    steps:
    - checkout
    - run:
        command: echo $CACHE_VERSION > cache.version
    - restore_cache:
        name: Restore Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
    - run:
        command: dep ensure -vendor-only
    - save_cache:
        name: Save Go Vendor Cache
        key: v{{ checksum "cache.version" }}-go-vendor-{{ checksum "Gopkg.lock" }}
        paths:
        - ./vendor
    - run:
        command: ./tools/ci/gorace_test | tee /tmp/gorace_test.txt
    - store_artifacts:
        path: /tmp/gorace_test.txt
  aws-ecr/build_and_push_image:
    machine: true
    steps:
    - checkout
    - run:
        name: Install AWS CLI
        command: |
          export PIP=$(which pip pip3 | head -1)
          if [[ -n $PIP ]]; then
            if which sudo > /dev/null; then
              sudo $PIP install awscli --upgrade
            else
              # This installs the AWS CLI to ~/.local/bin. Make sure that ~/.local/bin is in your $PATH.
              $PIP install aws --upgrade --user
            fi
          elif [[ $(which unzip curl | wc -l) -eq 2 ]]; then
            cd
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            if which sudo > /dev/null; then
              sudo ~/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
            else
              # This installs the AWS CLI to the default location (~/.local/lib/aws) and create a symbolic link (symlink) at ~/bin/aws. Make sure that ~/bin is in your $PATH.
              awscli-bundle/install -b ~/bin/aws
            fi
            rm -rf awscli-bundle*
            cd -
          else
            echo "Unable to install AWS CLI. Please install pip."
            exit 1
          fi
    - run:
        name: Configure AWS Access Key ID
        command: |
          aws configure set aws_access_key_id \
          $AWS_ACCESS_KEY_ID \
          --profile default
    - run:
        name: Configure AWS Secret Access Key
        command: |
          aws configure set aws_secret_access_key \
          $AWS_SECRET_ACCESS_KEY \
          --profile default
    - run:
        name: Configure AWS default region
        command: |
          aws configure set region $AWS_REGION \
          --profile default
    - run:
        command: |
          # aws ecr get-login returns a login command w/ a temp token
          LOGIN_COMMAND=$(aws ecr get-login --no-include-email --region $AWS_REGION)

          # save it to an env var & use that env var to login
          $LOGIN_COMMAND
        name: Log into Amazon ECR
    - run:
        command: |
          docker build \
             \
            -f ./explorer/Dockerfile \
            -t $AWS_ECR_ACCOUNT_URL/explorer:latest \
            ./explorer
        name: Build docker image
    - run:
        command: docker push $AWS_ECR_ACCOUNT_URL/explorer:latest
        name: Push image to Amazon ECR
workflows:
  version: 2
  test:
    jobs:
    - go-sqlite
    - go-sqlite-race
    - go-postgres
    - truffle
    - geth-postgres
    - parity-postgres
    - operator-ui
    - rust
    - explorer
    - build-explorer-image:
        filters:
          branches:
            ignore: master
    - aws-ecr/build_and_push_image:
        filters:
          branches:
            only: master
        requires:
        - explorer
    - reportcoverage:
        requires:
        - go-sqlite
        - operator-ui

# Original config.yml file:
# version: 2.1
# orbs:
#   aws-ecr: circleci/aws-ecr@4.0.1
# jobs:
#   go-sqlite:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/init_gcloud
#       - run: ./tools/ci/go_test | tee /tmp/go_test.txt
#       - store_artifacts:
#           path: /tmp/go_test.txt
#   go-sqlite-race:
#     resource_class: large
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/gorace_test | tee /tmp/gorace_test.txt
#       - store_artifacts:
#           path: /tmp/gorace_test.txt
#   go-postgres:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#       - image: circleci/postgres:11-alpine
#         environment:
#           POSTGRES_USER: circleci_postgres
#           POSTGRES_DB: circleci_test
#     environment:
#       DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/go_single_threaded_test
#   rust:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/rust_test
#   sgx:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#     environment:
#       SGX_ENABLED: yes
#       # XXX: These are set in the base image but circleci seems to wipe them out
#       PATH: \"/root/.cargo/bin:/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/sgxsdk/bin:/opt/sgxsdk/bin/x64\"
#       LD_LIBRARY_PATH: \"/opt/sgxsdk/sdk_libs\"
#       SGX_SDK: \"/opt/sgxsdk\"
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: make enclave
#       - run: ./tools/ci/sgx_test
#   geth-postgres:
#     resource_class: xlarge
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#         environment:
#           TYPEORM_NAME: ci
#           TYPEORM_HOST: explorerdb
#       - image: circleci/postgres:11
#         environment:
#           POSTGRES_USER: circleci_postgres
#           POSTGRES_DB: circleci_test
#           POSTGRES_INITDB_ARGS: \"--lc-collate=C --lc-ctype=C\"
#       - image: circleci/postgres:11
#         name: explorerdb
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: explorer_test
#           POSTGRES_INITDB_ARGS: \"--lc-collate=C --lc-ctype=C\"
#     environment:
#       DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/ethereum_test
#   parity-postgres:
#     resource_class: large
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#         environment:
#           TYPEORM_NAME: ci
#           TYPEORM_HOST: explorerdb
#       - image: circleci/postgres:11-alpine
#         environment:
#           POSTGRES_USER: circleci_postgres
#           POSTGRES_DB: circleci_test
#       - image: circleci/postgres:11-alpine
#         name: explorerdb
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: explorer_test
#       - image: smartcontract/devnet:latest
#     environment:
#       DATABASE_URL: postgres://circleci_postgres@localhost:5432/circleci_test?sslmode=disable
#       ETH_WS_PORT: 8546
#       ETH_HTTP_PORT: 8545
#       MIN_OUTGOING_CONFIRMATIONS: 1
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#       - run: dep ensure -vendor-only
#       - save_cache:
#           name: Save Go Vendor Cache
#           key: v{{ checksum \"cache.version\" }}-go-vendor-{{ checksum \"Gopkg.lock\" }}
#           paths:
#             - ./vendor
#       - run: ./tools/ci/ethereum_test parity
#   truffle:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.22
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Yarn Package Cache
#           key: v{{ checksum \"cache.version\" }}-yarn-vendor-{{ checksum \"yarn.lock\" }}
#       - run: yarn install
#       - save_cache:
#           name: Save Yarn Package Cache
#           key: v{{ checksum \"cache.version\" }}-yarn-vendor-{{ checksum \"yarn.lock\" }}
#           paths:
#             - /usr/local/share/.cache/yarn
#       - run: ./tools/ci/truffle_test
#   operator-ui:
#     working_directory: /go/src/github.com/smartcontractkit/chainlink
#     docker:
#       - image: smartcontract/builder:1.0.21
#     steps:
#       - checkout
#       - run: echo $CACHE_VERSION > cache.version
#       - restore_cache:
#           name: Restore Yarn Package Cache
#           key: v{{ checksum \"cache.version\" }}-yarn-vendor-{{ checksum \"yarn.lock\" }}
#       - run: yarn install
#       - save_cache:
#           name: Save Yarn Package Cache
#           key: v{{ checksum \"cache.version\" }}-yarn-vendor-{{ checksum \"yarn.lock\" }}
#           paths:
#             - /usr/local/share/.cache/yarn
#       - run: ./tools/ci/init_gcloud
#       - run: ./tools/ci/operator_ui_test
#   explorer:
#     working_directory: ~/chainlink/explorer
#     docker:
#       - image: circleci/node:10-browsers
#         environment:
#           TYPEORM_NAME: ci
#       - image: circleci/postgres:11-alpine
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: explorer_test
#     steps:
#       - checkout:
#           path: ~/chainlink
#       - restore_cache:
#           key: dependency-cache-{{ checksum \"yarn.lock\" }}-{{checksum \"client/yarn.lock\" }}
#       - run:
#           name: Install Server Packages
#           command: yarn install
#       - run:
#           name: Install Client Packages
#           command: cd client && yarn install
#       - save_cache:
#           key: dependency-cache-{{ checksum \"yarn.lock\" }}-{{checksum \"client/yarn.lock\" }}
#           paths:
#             - ~/.cache/yarn
#             - /usr/local/share/.cache/yarn
#       - run:
#           name: Run Lint
#           command: yarn lint
#       - run:
#           name: Run Server Tests
#           command: yarn test-ci:silent
#       - run:
#           name: Run Client Tests
#           command: cd client && yarn test-ci:silent
#       - run:
#           name: Run E2E Tests
#           command: cd client && yarn build && cd .. && yarn test-ci:e2e:silent
#   build-explorer-image:
#     machine: true
#     steps:
#       - checkout
#       - run:
#           name: Docker build
#           command: cd explorer && docker build .
#   reportcoverage:
#     docker:
#       - image: smartcontract/builder:1.0.21
#     steps:
#       - checkout
#       - run: ./tools/ci/init_gcloud
#       - run: ./tools/ci/report_coverage
# 
# workflows:
#   version: 2
#   test:
#     jobs:
#       - go-sqlite
#       - go-sqlite-race
#       - go-postgres
#       - truffle
#       - geth-postgres
#       - parity-postgres
#       - operator-ui
#       - rust
#       - explorer
#       - build-explorer-image:
#           filters:
#             branches:
#               ignore: master
#       - aws-ecr/build_and_push_image:
#           requires:
#             - explorer
#           filters:
#             branches:
#               only: master
#           path: ./explorer
#           dockerfile: ./explorer/Dockerfile
#           repo: explorer
#       - reportcoverage:
#           requires:
#             - go-sqlite
#             - operator-ui